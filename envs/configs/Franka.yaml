# used to create the object
name: FrankaCube

# device
sim_device_id: null 
rl_device_id: null
headless: True 
# set to True if you use camera sensors in the environment
enable_camera_sensors: False 

# env
early_termin_step: 30 
early_termin_bar: 0.05
max_ag_unmoved_steps: 25
ag_moved_threshold: 0.002
# rew
reward_type: sparse
contact_force_penalty: 0.0
contact_force_threshold: 2.0
success_bar: !!float -1e-3
extra_steps: 5
# number
num_cameras: 16
render_size: [320, 200]
num_envs: 1024 
current_num_goals: 1
enable_mask: True
# extra sample to keep goal away
max_sample_time: 5
extra_goal_sample: 10
num_goals: 1
goal_shape: rearrange # {rearrange, tower1, tower2, tower_n}
base_steps: 50 
max_steps: null
# dim
per_action_dim: 4
state_dim: null # calculate later
per_shared_dim: 7 # pos3, vel3, finger1 
per_seperate_dim: 7 # block state
seperate_dim: null
per_goal_dim: 3
goal_dim: null
info_dim: 7 #is_success1, step1, early_termin, traj_idx, traj_len, tleft, achieved_goal3n, grip pos, reached_ag, if_press_block(last)
# control
control_freq_inv: 10 # TODO check
filter_param: 0.4
env_spacing: 1.5
debug_viz: true
damping: 0.05
max_vel: 2
max_grip_vel: 0.1 
grip_control_mode: continuous # {continuous, discrete, discrete_with_stop}
max_ik_iter: 10
ik_err: 0.005 # for iteration version of IK
# max_vel: 1.8 # max move 0.05 per step
dof_vel_scale: 1
finger_shift: [0,0,-0.04]
err: 0.05
clip_actions: 1.0
# block
inhand_rate: 0.2
block_size: 0.04 
block_length: null 
goal_sample_mode: bernoulli
obj_sample_mode: bernoulli
task_distri: null
lock_block_orn: true
os_rate: 0.8
max_handover_time: 100
goal_os_rate: 0.5
# robot
enable_robot_id: false
num_robots: 2
bound_robot: true
action_shift: [0,0,0,0]
asset:
  assetRoot: 'isaac_assets'
  assetFileNameFranka: 'urdf/franka_description/robots/franka_panda.urdf'
  assetFileNameSphere: 'urdf/sphere.urdf'
# table 
table_size: [1.0, 2.0, 0.4]
table_gap: 0.0
max_table_gap: 0.3 # max table gap to prevent object falling
rand_table_gap: 0.01

robot_base_mode: auto # {auto, human, random}
# human mode
robot_base_xy: [[-0.7, -0.5], [0.7, 0.5]]
robot_base_orn: [[0,0,0.707,0.707], [0,0,0.707,-0.707]]
# auto mode
robot_gap: 0.7
robot_y: 0.5
# random mode
base_center_point: [[-0.2, 0], [0.2, 0]]
base_radius_range: [0.55, 0.65]

origin_shift: [-0.35, 0.35]

franka_init_pos: predefined # {predefined, center}

# ee_init_pos: [0.0, 0.0, 0.05]
friction: 0.01
# goal space
goal_space: [0.4, 0.3, 0.2]
goal_scale: 1.0
goal_ground_rate: 0.5
# noise
pos_noise: 0.0
mask_robot_vel: false

# sim:
physics_engine: SIM_PHYSX 
aggregate_mode: 3
dt: 0.01
substeps: 2
up_axis: 'z'
use_gpu_pipeline: true 
gravity: [0.0, 0.0, -9.81]
physx:
  num_threads: 4
  solver_type: 1
  use_gpu: True # set to False to run on CPU
  num_position_iterations: 12 # TODO check this
  num_velocity_iterations: 1
  contact_offset: 0.005
  rest_offset: 0.0
  bounce_threshold_velocity: 0.2
  max_depenetration_velocity: 1000.0
  default_buffer_size_multiplier: 5.0
  max_gpu_contact_pairs: 1048576 # 1024*1024
  num_subscenes: 0
  contact_collection: 0 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (default - all contacts)

task:
  randomize: False
auto_reset: True
norm_method: '0-1'